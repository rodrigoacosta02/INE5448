ROR_1:35:boolean_equals(java.lang.Object): this.tile == null  =>   this.tile != null
ROR_2:35:boolean_equals(java.lang.Object): ((domain.Cell) cell).tile == null  =>   ((domain.Cell) cell).tile != null
ROR_3:38:boolean_equals(java.lang.Object): this.tile == null  =>   this.tile != null
ROR_4:38:boolean_equals(java.lang.Object): ((domain.Cell) cell).tile == null  =>   ((domain.Cell) cell).tile != null
ROR_5:48:java.lang.String_toString(): this.tile == null  =>   this.tile != null
COR_1:35:boolean_equals(java.lang.Object): this.tile == null && ((domain.Cell) cell).tile == null  =>   this.tile == null || ((domain.Cell) cell).tile == null
COR_2:35:boolean_equals(java.lang.Object): this.tile == null && ((domain.Cell) cell).tile == null  =>   this.tile == null ^ ((domain.Cell) cell).tile == null
COR_3:38:boolean_equals(java.lang.Object): this.tile == null || ((domain.Cell) cell).tile == null  =>   this.tile == null && ((domain.Cell) cell).tile == null
COR_4:38:boolean_equals(java.lang.Object): this.tile == null || ((domain.Cell) cell).tile == null  =>   this.tile == null ^ ((domain.Cell) cell).tile == null
COI_1:35:boolean_equals(java.lang.Object): this.tile == null  =>  !(this.tile == null)
COI_2:35:boolean_equals(java.lang.Object): ((domain.Cell) cell).tile == null  =>  !(((domain.Cell) cell).tile == null)
COI_3:35:boolean_equals(java.lang.Object): this.tile == null && ((domain.Cell) cell).tile == null  =>  !(this.tile == null && ((domain.Cell) cell).tile == null)
COI_4:38:boolean_equals(java.lang.Object): this.tile == null  =>  !(this.tile == null)
COI_5:38:boolean_equals(java.lang.Object): ((domain.Cell) cell).tile == null  =>  !(((domain.Cell) cell).tile == null)
COI_6:38:boolean_equals(java.lang.Object): this.tile == null || ((domain.Cell) cell).tile == null  =>  !(this.tile == null || ((domain.Cell) cell).tile == null)
COI_7:48:java.lang.String_toString(): this.tile == null  =>  !(this.tile == null)
SDL_1:18:void_putTile(domain.Tile): this.tile = tile;  =>  
SDL_2:25:domain.Tile_removeTile(): domain.Tile aux = this.tile; this.tile = null; return aux;  =>   domain.Tile aux = this.tile; return aux;
SDL_3:35:boolean_equals(java.lang.Object): if (this.tile == null && ((domain.Cell) cell).tile == null) {     return true; } else {     if (this.tile == null || ((domain.Cell) cell).tile == null) {         return false;     } else {         return this.tile.equals( ((domain.Cell) cell).tile );     } }  =>  
SDL_4:44:boolean_equals(java.lang.Object): if (this.tile == null && ((domain.Cell) cell).tile == null) {     return true; } else {     if (this.tile == null || ((domain.Cell) cell).tile == null) {         return false;     } else {         return this.tile.equals( ((domain.Cell) cell).tile );     } }  =>   if (true) {     return true; } else {     if (this.tile == null || ((domain.Cell) cell).tile == null) {         return false;     } else {         return this.tile.equals( ((domain.Cell) cell).tile );     } }
SDL_5:38:boolean_equals(java.lang.Object): if (this.tile == null || ((domain.Cell) cell).tile == null) {     return false; } else {     return this.tile.equals( ((domain.Cell) cell).tile ); }  =>  
SDL_6:37:boolean_equals(java.lang.Object): return true;  =>   return false;
SDL_7:43:boolean_equals(java.lang.Object): if (this.tile == null || ((domain.Cell) cell).tile == null) {     return false; } else {     return this.tile.equals( ((domain.Cell) cell).tile ); }  =>   if (true) {     return false; } else {     return this.tile.equals( ((domain.Cell) cell).tile ); }
SDL_8:40:boolean_equals(java.lang.Object): return false;  =>   return true;
SDL_9:42:boolean_equals(java.lang.Object): return this.tile.equals( ((domain.Cell) cell).tile );  =>   return true;
SDL_10:42:boolean_equals(java.lang.Object): return this.tile.equals( ((domain.Cell) cell).tile );  =>   return false;
SDL_11:49:java.lang.String_toString(): return this.tile == null ? \"\" : tile.toString();  =>   return \"\";
ODL_1:35:boolean_equals(java.lang.Object):this.tile == null => this.tile
ODL_2:35:boolean_equals(java.lang.Object):this.tile == null => null
ODL_3:35:boolean_equals(java.lang.Object):((domain.Cell) cell).tile == null => ((domain.Cell) cell).tile
ODL_4:35:boolean_equals(java.lang.Object):((domain.Cell) cell).tile == null => null
ODL_5:35:boolean_equals(java.lang.Object):this.tile == null && ((domain.Cell) cell).tile == null => this.tile == null
ODL_6:35:boolean_equals(java.lang.Object):this.tile == null && ((domain.Cell) cell).tile == null => ((domain.Cell) cell).tile == null
ODL_7:38:boolean_equals(java.lang.Object):this.tile == null => this.tile
ODL_8:38:boolean_equals(java.lang.Object):this.tile == null => null
ODL_9:38:boolean_equals(java.lang.Object):((domain.Cell) cell).tile == null => ((domain.Cell) cell).tile
ODL_10:38:boolean_equals(java.lang.Object):((domain.Cell) cell).tile == null => null
ODL_11:38:boolean_equals(java.lang.Object):this.tile == null || ((domain.Cell) cell).tile == null => this.tile == null
ODL_12:38:boolean_equals(java.lang.Object):this.tile == null || ((domain.Cell) cell).tile == null => ((domain.Cell) cell).tile == null
ODL_13:48:java.lang.String_toString():this.tile == null => this.tile
ODL_14:48:java.lang.String_toString():this.tile == null => null
CDL_1:35:boolean_equals(java.lang.Object):this.tile == null => this.tile
CDL_2:35:boolean_equals(java.lang.Object):((domain.Cell) cell).tile == null => ((domain.Cell) cell).tile
CDL_3:38:boolean_equals(java.lang.Object):this.tile == null => this.tile
CDL_4:38:boolean_equals(java.lang.Object):((domain.Cell) cell).tile == null => ((domain.Cell) cell).tile
CDL_5:48:java.lang.String_toString():this.tile == null => this.tile
